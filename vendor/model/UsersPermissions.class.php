<?php/** Defino o local onde esta a classe */namespace vendor\model;class UsersPermissions{    /** Declaro as variavéis da classe */    private $connection = null;    private $sql = null;    private $stmt = null;    private $userPermissionId = null;    private $name = null;    private $description = null;    private $permissions = null;    private $date = null;    /** Construtor da classe */    function __construct()    {        /** Cria o objeto de conexão com o banco de dados */        $this->connection = new MySql();    }    /** Salvo ou atualizo um registro */    public function Save($userPermissionId, $name, $description, $permissions): bool    {        /** Parâmetros de Entrada */        $this->userPermissionId = $userPermissionId;        $this->name = $name;        $this->description = $description;        $this->permissions = $permissions;        /** Verifico o tipo de operação */        if ($this->userPermissionId === 0)        {            /** Consulta SQL */            $this->sql = 'INSERT INTO users_permissions(user_permission_id, name, description, permissions)VALUES(:userPermissionId, :name, :description, :permissions);';        }        else        {            /** Consulta SQL */            $this->sql = 'UPDATE users_permissions SET                           name = :name,                          description = :description,                          permissions = :permissions                          WHERE user_permission_id = :userPermissionId';        }        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':userPermissionId', $this->userPermissionId);        $this->stmt->bindParam(':name', $this->name);        $this->stmt->bindParam(':description', $this->description);        $this->stmt->bindParam(':permissions', $this->permissions);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Consulta de um registro especifico */    public function Get(int $userPermissionId)    {        /** Parâmetros de Entrada */        $this->userPermissionId = $userPermissionId;        /** Consulta SQL */        $this->sql = 'SELECT * FROM users_permissions WHERE user_permission_id = :userPermissionId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':userPermissionId', $this->userPermissionId);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Remoção de um registro especifico */    public function Delete(int $userPermissionId): bool    {        /** Parâmetros de Entrada */        $this->userPermissionId = $userPermissionId;        /** Consulta SQL */        $this->sql = 'DELETE FROM users_permissions WHERE user_permission_id = :userPermissionId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':userPermissionId', $this->userPermissionId);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Listagem de todos os registros */    public function All()    {        /** Consulta SQL */        $this->sql = 'SELECT * FROM users_permissions;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchAll(\PDO::FETCH_OBJ);    }    /** Fecha uma conexão aberta anteriormente com o banco de dados */    function __destruct()    {        $this->connection = null;    }}