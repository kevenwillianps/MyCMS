<?php/** Defino o local onde esta a classe */namespace vendor\model;class Contacts{    /** Declaro as variavéis da classe */    private $connection = null;    private $sql = null;    private $stmt = null;    private $contactId = null;    private $name = null;    private $email = null;    private $cellphone = null;    private $subject = null;    private $message = null;    /** Construtor da classe */    function __construct()    {        /** Cria o objeto de conexão com o banco de dados */        $this->connection = new MySql();    }    /** Salvo ou atualizo um registro */    public function Save(int $contactId, string $name, string $email, string $cellphone, string $subject, string $message) : bool    {        /** Parâmetros de Entrada */        $this->contactId = $contactId;        $this->name = $name;        $this->email = $email;        $this->cellphone = $cellphone;        $this->subject = $subject;        $this->message = $message;        /** Consulta SQL */        $this->sql = 'INSERT INTO contacts(contact_id,                                             name,                                             email,                                             cellphone,                                             subject,                                             message)                                       VALUES(:contactId,                                              :name,                                              :email,                                              :cellphone,                                              :subject,                                              :message);';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':contactId', $this->contactId);        $this->stmt->bindParam(':name', $this->name);        $this->stmt->bindParam(':email', $this->email);        $this->stmt->bindParam(':cellphone', $this->cellphone);        $this->stmt->bindParam(':subject', $this->subject);        $this->stmt->bindParam(':message', $this->message);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Consulta de um registro especifico */    public function Get(int $contactId)    {        /** Parâmetros de Entrada */        $this->contactId = $contactId;        /** Consulta SQL */        $this->sql = 'SELECT * FROM contacts WHERE contact_id = :contactId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':contactId', $this->contactId);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Remoção de um registro especifico */    public function Delete(int $contactId): bool    {        /** Parâmetros de Entrada */        $this->contactId = $contactId;        /** Consulta SQL */        $this->sql = 'DELETE FROM contacts WHERE contact_id = :contactId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':contactId', $this->contactId);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Listagem de todos os registros */    public function All()    {        /** Consulta SQL */        $this->sql = 'SELECT * FROM contacts;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchAll(\PDO::FETCH_OBJ);    }    /** Fecha uma conexão aberta anteriormente com o banco de dados */    function __destruct()    {        $this->connection = null;    }}