<?php/** Defino o local onde esta a classe */namespace vendor\model;class Users{    /** Declaro as variavéis da classe */    private $connection = null;    private $sql = null;    private $stmt = null;    private $userId = null;    private $nameFirst = null;    private $nameLast = null;    private $dateBirth = null;    private $email = null;    private $password = null;    private $history = null;    /** Construtor da classe */    function __construct()    {        /** Cria o objeto de conexão com o banco de dados */        $this->connection = new MySql();    }    /** Busco um registro especifico para realizar acesso */    public function Access(string $email, string $password)    {        /** Parâmetros de entrada */        $this->email = $email;        $this->password = $password;        /** Consulta SQL */        $this->sql = 'SELECT * FROM USERS                       WHERE `email` LIKE :email                       AND `password` LIKE :password                       ORDER BY USER_ID DESC                       LIMIT 1;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preencho os parâmetros do SQL */        $this->stmt->bindParam(':email', $this->email);        $this->stmt->bindParam(':password', $this->password);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Salvo o histórico do registro */    public function SaveHistory(int $userId, string $history): bool    {        /** Parâmetros de Entrada */        $this->userId = $userId;        $this->history = $history;        /** Consulta SQL*/        $this->sql = 'UPDATE USERS SET HISTORY = :history WHERE USER_ID = :userId';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':history', $this->history);        $this->stmt->bindParam(':userId', $this->userId);        /** Executo o SQL */        return $this->stmt->execute();    }    /** Busco um registro especifico para realizar acesso */    public function All()    {        /** Consulta SQL */        $this->sql = 'SELECT * FROM USERS                       ORDER BY USER_ID ASC;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchAll(\PDO::FETCH_OBJ);    }    /** Busco um registro especifico para realizar acesso */    public function Get(int $userId)    {        /** Parâmetros de Entrada */        $this->userId = $userId;        /** Consulta SQL */        $this->sql = 'SELECT * FROM USERS WHERE user_id = :userId;';        /** Preparo o SQL para execução */        $this->stmt = $this->connection->connect()->prepare($this->sql);        /** Preenchimento dos parâmetros */        $this->stmt->bindParam(':userId', $this->userId);        /** Executo o SQL */        $this->stmt->execute();        /** Retorno o resultado */        return $this->stmt->fetchObject();    }    /** Fecha uma conexão aberta anteriormente com o banco de dados */    function __destruct()    {        $this->connection = null;    }}